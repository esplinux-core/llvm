dependencies("ca-certificates git cmake make llvm clang python ffi musl-dev expat expat-dev xml2 xml2-dev zlib zlib-dev")

CONSTANTS = {
  "name": "llvm",
  "version": "15e3e95263fadcc9af8269aa26bad302219a183c", # Jun 8, 2019 
}

pre("mkdir -p /workspace/%(name)s" % CONSTANTS)

checkout(git="git://github.com/llvm/llvm-project")

patch("""
  cd llvm-project
  git reset --hard %(version)s
  cd compiler-rt
  patch -p1 -i /project/patches/compiler-rt-01-sanitizer-nongnu.patch
  patch -p1 -i /project/patches/compiler-rt-02-ngtc-specific.patch
  cd ../libcxx
  patch -p1 -i /project/patches/libcxx-01-musl-hardfix.patch
  cd ../llvm/tools
  ln -s ../../clang .
  ln -s ../../lld .
  cd ../projects
  ln -s ../../libunwind .
  ln -s ../../compiler-rt .
  ln -s ../../libcxx .
  ln -s ../../libcxxabi .
""" % CONSTANTS)

config("""
  mkdir build
  cd build
  cmake \
   -DCMAKE_C_COMPILER=clang \
   -DCMAKE_CXX_COMPILER=clang++ \
   -DLIBCXXABI_LIBCXX_PATH=/project/llvm-project/libcxx \
   -DLIBCXXABI_LIBCXX_INCLUDES=/project/llvm-project/libcxx/include \
   -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
   -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
   -DLIBCXX_LIBCXXABI_INCLUDES_INTERNAL=/project/llvm-project/libcxxabi/include \
   -DLIBCXX_HAS_MUSL_LIBC=ON \
   -DLIBCXX_HAS_GCC_S_LIB=OFF \
   -DLIBCXX_ENABLE_FILESYSTEM=OFF \
   -DLIBUNWIND_ENABLE_SHARED=OFF \
   -DCOMPILER_RT_BUILD_CRT=ON \
   -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
   -DCOMPILER_RT_BUILD_PROFILE=OFF \
   -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
   -DCOMPILER_RT_BUILD_XRAY=OFF \
   -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
   -DCLANG_DEFAULT_LINKER=lld \
   -DCLANG_DEFAULT_RTLIB=compiler-rt \
   -DCLANG_ENABLE_ARCMT=OFF \
   -DCLANG_ENABLE_STATIC_ANALYZER=OFF \
   -DLLVM_ENABLE_RTTI=ON \
   -DLLVM_ENABLE_EH=ON \
   -DLLVM_DEFAULT_TARGET_TRIPLE=x86_64-pc-linux-musl \
   -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
   -DCMAKE_INSTALL_PREFIX=/ \
   -DCMAKE_BUILD_TYPE=Release \
   -DLLVM_TARGET_ARCH=x86_64 \
   -DLLVM_TARGETS_TO_BUILD=X86 \
   ../llvm-project/llvm
""")

build("""
  make -j2 -C build || true
  make -j2 -C build || true
  make -j2 -C build || true
""")

install("DESTDIR=/workspace/%(name)s make -C build install" % CONSTANTS)

package("""
  mkdir /package
  cd /workspace/%(name)s
  tar cf /package/%(name)s-%(version)s.tar *
  gzip /package/%(name)s-%(version)s.tar
  echo %(name)s_VERSION=%(version)s > /package/version.txt
  echo %(name)s_FILE=%(name)s-%(version)s.tar.gz >> /package/version.txt
  echo %(name)s_URL="https://github.com/esplinux-core/%(name)s/releases/download" >> /package/version.txt
""" % CONSTANTS)
